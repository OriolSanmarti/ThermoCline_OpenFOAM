/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      topoSetDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

actions
(
    // I create 3 surface regions that will be the inlet regions of the coils
    // these surfaces are defined with 3 boxes
/*
    // BCWALL_1 (coil inlets)
    {
        name    myFaces1;           //name of the new set to be created
        type    faceSet; 
        action  new;                        // is it new or appending?
        source  boxToFace;             // extracting faces from the defined box
        sourceInfo                          // box details
        {
        //box  (0.01 -0.01 0.01) (0.29 0.01 0.49);
            boxes
            (
            (0.19 0.29 0.43) (0.23 0.31 0.47)
            //(0.22 -0.01 0.43) (0.26 0.01 0.47)
            //(0.42 -0.01 0.43) (0.46 0.01 0.47)
            );
        }
    }
    {
        // Extract the boundary faces from the set of all faces
        name myFaces1;
        type faceSet;
        action subset;
        source boundaryToFace;
        sourceInfo
        {
        }
    }

    // BCWALL_2 (coil outlets)
    {
        name    myFaces2;           //name of the new set to be created
        type    faceSet; 
        action  new;                        // is it new or appending?
        source  boxToFace;             // extracting faces from the defined box
        sourceInfo                          // box details
        {
        //box  (0.31 -0.01 0.01) (0.59 0.01 0.49);  
        boxes
        (
            (0.14 0.29 0.43) (0.18 0.31 0.47)
            //(0.13 -0.01 0.43) (0.17 0.01 0.47)
            //(0.33 -0.01 0.43) (0.37 0.01 0.47)
            //(0.53 -0.01 0.43) (0.57 0.01 0.47)
            );
        }
    }
    {
        // Extract the boundary faces from the set of all faces
        name myFaces2;
        type faceSet;
        action subset;
        source boundaryToFace;
        sourceInfo
        {
        }
    }
    
    // Here i define the position of the inlets and outlets of the main tank
    // MAIN_TANK_INLET
    {
        name    myFaces3;           //name of the new set to be created
        type    faceSet; 
        action  new;                        // is it new or appending?
        source  boxToFace;             // extracting faces from the defined box
        sourceInfo                          // box details
        {
        boxes
        (
            (0.23 0.18 0.46) (0.25 0.21 0.48)
            (0.23 0.23 0.46) (0.25 0.24 0.48)

            (0.35 0.21 0.46) (0.37 0.25 0.48)
*/        /*
            (0.29 -0.01 0.44) (0.31 0.01 0.46)
            (0.09 -0.01 0.44) (0.11 0.01 0.46)
            (0.49 -0.01 0.44) (0.51 0.01 0.46)
            */ /*
        );
        }
    }
    {
        // Extract the boundary faces from the set of all faces
        name myFaces3;
        type faceSet;
        action subset;
        source boundaryToFace;
        sourceInfo
        {
        }
    }
    // MAIN_TANK_OUTLET
    {
        name    myFaces4;           //name of the new set to be created
        type    faceSet; 
        action  new;                        // is it new or appending?
        source  boxToFace;             // extracting faces from the defined box
        sourceInfo                          // box details
        {
        boxes
        (
            (0.03 0.29 0.05) (0.06 0.31 0.07)
            //(0.28 0.23 -0.01) (0.32 0.27 0.01)
        );
        }
    }
    {
        // Extract the boundary faces from the set of all faces
        name myFaces4;
        type faceSet;
        action subset;
        source boundaryToFace;
        sourceInfo
        {
        }
    }
    */
);


// ************************************************************************* //
